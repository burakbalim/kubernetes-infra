apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-slave-config
data:
  PRIMARY_HOST: "postgres-master.default.svc.cluster.local"
  REPLICA_HOST: "postgres-slave.default.svc.cluster.local"
  postgresql.conf: |
    hot_standby = on
  pg_hba.conf: |
    local   all             all                                    trust
    host    all             all             0.0.0.0/0              md5
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-slave
spec:
  serviceName: postgres-slave
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      role: slave
  template:
    metadata:
      labels:
        app: postgres
        role: slave
    spec:
      initContainers:
        - name: fix-permissions
          image: postgres:15
          command: ["sh", "-c", "chmod -R 0700 /var/lib/postgresql/data && chown -R 999:999 /var/lib/postgresql/data"]
          volumeMounts:
            - name: postgres-slave-data
              mountPath: /var/lib/postgresql/data
      containers:
        - name: postgres
          image: postgres:15
          securityContext:
            runAsUser: 999
            runAsGroup: 999
          command:
            - bash
            - -c
            - |
              if [ ! -s "/var/lib/postgresql/data/PG_VERSION" ]; then
                echo "Initializing replica..."
                rm -rf /var/lib/postgresql/data/*
                chmod 700 /var/lib/postgresql/data
                chown -Rf postgres:postgres /var/lib/postgresql/data
              
                until pg_basebackup -h postgres-master.default.svc.cluster.local -D /var/lib/postgresql/data -U postgres -v -P -X stream; do
                  echo "Waiting for master to connect..."
                  sleep 5
                done
              
                cp -f /etc/postgresql/postgresql.conf /var/lib/postgresql/data/postgresql.conf
                cp -f /etc/postgresql/pg_hba.conf /var/lib/postgresql/data/pg_hba.conf
                chmod 600 /var/lib/postgresql/data/postgresql.conf
                chmod 600 /var/lib/postgresql/data/pg_hba.conf
                chown postgres:postgres /var/lib/postgresql/data/postgresql.conf
                chown postgres:postgres /var/lib/postgresql/data/pg_hba.conf
              
                echo "primary_conninfo = 'host=postgres-master.default.svc.cluster.local port=5432 user=postgres password=o0>YY1*=hr3'" >> /var/lib/postgresql/data/postgresql.conf
                echo "primary_slot_name = 'replica_1'" >> /var/lib/postgresql/data/postgresql.conf
                echo "recovery_target_timeline = 'latest'" >> /var/lib/postgresql/data/postgresql.conf
              fi
              
              exec postgres
          envFrom:
            - configMapRef:
                name: postgres-slave-config
            - secretRef:
                name: postgres-secrets
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: postgres-slave-data
              mountPath: /var/lib/postgresql/data
            - name: postgres-config-volume
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
              readOnly: false
            - name: postgres-config-volume
              mountPath: /etc/postgresql/pg_hba.conf
              subPath: pg_hba.conf
              readOnly: false
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - postgres
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              memory: "2Gi"
              cpu: "500m"
            limits:
              memory: "4Gi"
              cpu: "1000m"
      volumes:
        - name: postgres-config-volume
          configMap:
            name: postgres-slave-config
  volumeClaimTemplates:
    - metadata:
        name: postgres-slave-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-slave
spec:
  selector:
    app: postgres
    role: slave
  ports:
    - port: 5432
      targetPort: 5432
  type: LoadBalancer
