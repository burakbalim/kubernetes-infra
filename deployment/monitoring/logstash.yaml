apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: default
data:
  logstash.conf: |
    input {
      tcp {
        port => 5044
        codec => json
        type => "json"
      }
    }
    
    filter {
      if [type] == "json" {
        json {
          source => "message"
        }
      }
    }
    
    output {
      elasticsearch {
        hosts => ["http://elasticsearch.default.svc.cluster.local:9200"]
        index => "logstash-%{+YYYY.MM.dd}"
      }
      stdout {
        codec => rubydebug
      }
    }
  logstash.yml: |
    path.config: /usr/share/logstash/pipeline
    http.host: "0.0.0.0"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.15.0
          ports:
            - containerPort: 5044
          env:
            - name: LOGSTASH_PATH_CONFIG
              value: /usr/share/logstash/config
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/pipeline/logstash.conf
              subPath: logstash.conf
            - name: config-volume
              mountPath: /usr/share/logstash/config/logstash.yml
              subPath: logstash.yml
      volumes:
        - name: config-volume
          configMap:
            name: logstash-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: logstash
  ports:
    - protocol: TCP
      port: 5044
      targetPort: 5044
